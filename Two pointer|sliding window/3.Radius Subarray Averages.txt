#K Radius Subarray Averages
(https://leetcode.com/problems/k-radius-subarray-averages/description/)




#cpp code 

class Solution {
public:
    vector<int> getAverages(vector<int>& nums, int k) {
        int i=0,j=0;
        vector<int>vec(nums.size(),-1);
        long sum=0;

        while(j<nums.size())
        {
            
            sum+=nums[j];
            
            if(j-i<2*k)
            {
                
                j++;
            }
            else if(j-i==2*k)
            {
                
                vec[(j+i)/2]=sum/((2*k)+1);
               
                j++;
                sum-=nums[i];
                i++;

            }
        }

        
        return vec;
    }
};


